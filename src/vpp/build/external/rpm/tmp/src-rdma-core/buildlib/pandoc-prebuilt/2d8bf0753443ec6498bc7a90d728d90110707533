.\" Automatically generated by Pandoc 2.5
.\"
.TH "mlx5dv_devx_subscribe_devx_event, mlx5dv_devx_subscribe_devx_event_fd" "3" "" "" ""
.hy
.SH NAME
.PP
mlx5dv_devx_subscribe_devx_event \- Subscribe over an event channel for
device events.
.PP
mlx5dv_devx_subscribe_devx_event_fd \- Subscribe over an event channel
for device events to signal eventfd.
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <infiniband/mlx5dv.h>

int mlx5dv_devx_subscribe_devx_event(struct mlx5dv_devx_event_channel *dv_event_channel,
                     struct mlx5dv_devx_obj *obj,
                     uint16_t events_sz,
                     uint16_t events_num[],
                     uint64_t cookie)

int mlx5dv_devx_subscribe_devx_event_fd(struct mlx5dv_devx_event_channel *dv_event_channel,
                    int fd,
                    struct mlx5dv_devx_obj *obj,
                    uint16_t event_num)
\f[R]
.fi
.SH DESCRIPTION
.PP
Subscribe over a DEVX event channel for device events.
.SH ARGUMENTS
.TP
.B \f[I]dv_event_channel\f[R]
Event channel to subscribe over.
.TP
.B \f[I]fd\f[R]
A file descriptor that previously was opened by the eventfd() system
call.
.TP
.B \f[I]obj\f[R]
DEVX object that \f[I]events_num\f[R] relates to, can be NULL for
unaffiliated events.
.TP
.B \f[I]events_sz\f[R]
Size of the \f[I]events_num\f[R] buffer that holds the events to
subscribe for.
.TP
.B \f[I]events_num\f[R]
Holds the required event numbers to subscribe for, numbers are according
to the device specification.
.TP
.B \f[I]cookie\f[R]
The value to be returned back when reading the event, can be used as an
ID for application use.
.SH NOTES
.PP
When mlx5dv_devx_subscribe_devx_event_fd will be used the \f[I]fd\f[R]
will be signaled once an event has occurred.
.SH SEE ALSO
.PP
\f[I]mlx5dv_open_device(3)\f[R],
\f[I]mlx5dv_devx_create_event_channel(3)\f[R],
\f[I]mlx5dv_devx_get_event(3)\f[R]
.PP
#AUTHOR
.PP
Yishai Hadas <yishaih@mellanox.com>
