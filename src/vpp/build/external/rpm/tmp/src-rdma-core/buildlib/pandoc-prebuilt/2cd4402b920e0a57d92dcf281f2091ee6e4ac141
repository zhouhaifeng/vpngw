.\" Automatically generated by Pandoc 2.5
.\"
.TH "IBV_RESIZE_CQ" "3" "2006\-10\-31" "libibverbs" "Libibverbs Programmer\[cq]s Manual"
.hy
.SH NAME
.PP
ibv_resize_cq \- resize a completion queue (CQ)
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <infiniband/verbs.h>

int ibv_resize_cq(struct ibv_cq *cq, int cqe);
\f[R]
.fi
.SH DESCRIPTION
.PP
\f[B]ibv_resize_cq()\f[R] resizes the completion queue (CQ) \f[I]cq\f[R]
to have at least \f[I]cqe\f[R] entries.
\f[I]cqe\f[R] must be at least the number of unpolled entries in the CQ
\f[I]cq\f[R].
If \f[I]cqe\f[R] is a valid value less than the current CQ size,
\f[B]ibv_resize_cq()\f[R] may not do anything, since this function is
only guaranteed to resize the CQ to a size at least as big as the
requested size.
.SH RETURN VALUE
.PP
\f[B]ibv_resize_cq()\f[R] returns 0 on success, or the value of errno on
failure (which indicates the failure reason).
.SH NOTES
.PP
\f[B]ibv_resize_cq()\f[R] may assign a CQ size greater than or equal to
the requested size.
The cqe member of \f[I]cq\f[R] will be updated to the actual size.
.SH SEE ALSO
.PP
\f[B]ibv_create_cq\f[R](3), \f[B]ibv_destroy_cq\f[R](3)
.SH AUTHOR
.PP
Dotan Barak <dotanba@gmail.com>
