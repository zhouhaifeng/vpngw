.\" Automatically generated by Pandoc 2.5
.\"
.TH "EFADV_CREATE_QP_EX" "3" "2019\-08\-06" "efa" "EFA Direct Verbs Manual"
.hy
.SH NAME
.PP
efadv_create_qp_ex \- Create EFA specific extended Queue Pair
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <infiniband/efadv.h>

struct ibv_qp *efadv_create_qp_ex(struct ibv_context *ibvctx,
                  struct ibv_qp_init_attr_ex *attr_ex,
                  struct efadv_qp_init_attr *efa_attr,
                  uint32_t inlen);
\f[R]
.fi
.SH DESCRIPTION
.PP
\f[B]efadv_create_qp_ex()\f[R] creates device\-specific extended Queue
Pair.
.PP
The argument attr_ex is an ibv_qp_init_attr_ex struct, as defined in
<infiniband/verbs.h>.
.PP
Use ibv_qp_to_qp_ex() to get the ibv_qp_ex for accessing the send ops
iterator interface, when QP create attr IBV_QP_INIT_ATTR_SEND_OPS_FLAGS
is used.
.PP
Scalable Reliable Datagram (SRD) transport provides reliable
out\-of\-order delivery, transparently utilizing multiple network paths
to reduce network tail latency.
Its interface is similar to UD, in particular it supports message size
up to MTU, with error handling extended to support reliable
communication.
.PP
Compatibility is handled using the comp_mask and inlen fields.
.IP
.nf
\f[C]
struct efadv_qp_init_attr {
    uint64_t comp_mask;
    uint32_t driver_qp_type;
    uint8_t reserved[4];
};
\f[R]
.fi
.TP
.B \f[I]inlen\f[R]
In: Size of struct efadv_qp_init_attr.
.TP
.B \f[I]comp_mask\f[R]
Compatibility mask.
.TP
.B \f[I]driver_qp_type\f[R]
The type of QP to be created:
.RS
.PP
EFADV_QP_DRIVER_TYPE_SRD: Create an SRD QP.
.RE
.SH RETURN VALUE
.PP
efadv_create_qp_ex() returns a pointer to the created QP, or NULL if the
request fails.
.SH SEE ALSO
.PP
\f[B]efadv\f[R](7), \f[B]ibv_create_qp_ex\f[R](3)
.SH AUTHORS
.PP
Gal Pressman <galpress@amazon.com> Daniel Kranzdorf
<dkkranzd@amazon.com>
