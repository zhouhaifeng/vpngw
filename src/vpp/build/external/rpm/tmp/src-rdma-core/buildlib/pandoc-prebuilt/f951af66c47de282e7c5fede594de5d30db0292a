.\" Automatically generated by Pandoc 2.5
.\"
.TH "ibv_import_mr ibv_unimport_mr" "3" "2020\-5\-3" "libibverbs" "Libibverbs Programmer\[cq]s Manual"
.hy
.SH NAME
.PP
ibv_import_mr \- import an MR from a given ibv_pd
.PP
ibv_unimport_mr \- unimport an MR
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <infiniband/verbs.h>

struct ibv_mr *ibv_import_mr(struct ibv_pd *pd, uint32_t mr_handle);
void ibv_unimport_mr(struct ibv_mr *mr)
\f[R]
.fi
.SH DESCRIPTION
.PP
\f[B]ibv_import_mr()\f[R] returns a Memory region (MR) that is
associated with the given \f[I]mr_handle\f[R] in the RDMA context that
assosicated with the given \f[I]pd\f[R].
.PP
The input \f[I]mr_handle\f[R] value must be a valid kernel handle for an
MR object in the assosicated RDMA context.
It can be achieved from the original MR by getting its ibv_mr\->handle
member value.
.PP
\f[B]ibv_unimport_mr()\f[R] un import the MR.
Once the MR usage has been ended ibv_dereg_mr() or ibv_unimport_mr()
should be called.
The first one will go to the kernel to destroy the object once the
second one way cleanup what ever is needed/opposite of the import
without calling the kernel.
.PP
This is the responsibility of the application to coordinate between all
ibv_context(s) that use this MR.
Once destroy is done no other process can touch the object except for
unimport.
All users of the context must collaborate to ensure this.
.SH RETURN VALUE
.PP
\f[B]ibv_import_mr()\f[R] returns a pointer to the allocated MR, or NULL
if the request fails.
.SH NOTES
.PP
The \f[I]addr\f[R] field in the imported MR is not applicable, NULL
value is expected.
.SH SEE ALSO
.PP
\f[B]ibv_reg_mr\f[R](3), \f[B]ibv_reg_dm_mr\f[R](3),
\f[B]ibv_reg_mr_iova\f[R](3), \f[B]ibv_reg_mr_iova2\f[R](3),
\f[B]ibv_dereg_mr\f[R](3),
.SH AUTHOR
.PP
Yishai Hadas <yishaih@mellanox.com>
