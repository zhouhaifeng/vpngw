.\" Automatically generated by Pandoc 2.5
.\"
.TH "ibv_query_qp_data_in_order" "3" "2020\-3\-3" "libibverbs" "Libibverbs Programmer\[cq]s Manual"
.hy
.SH NAME
.PP
ibv_query_qp_data_in_order \- check if qp data is guaranteed to be in
order.
.SH SYNOPSIS
.IP
.nf
\f[C]
#include <infiniband/verbs.h>

int ibv_query_qp_data_in_order(struct ibv_qp *qp, enum ibv_wr_opcode op, uint32_t flags);
\f[R]
.fi
.SH DESCRIPTION
.PP
\f[B]ibv_query_qp_data_in_order()\f[R] Checks whether WQE data is
guaranteed to be written in\-order, and thus reader may poll for data
instead of poll for completion.
This function indicates data is written in\-order within each WQE, but
cannot be used to determine ordering between separate WQEs.
This function describes ordering at the receiving side of the QP, not
the sending side.
.SH ARGUMENTS
.TP
.B \f[I]qp\f[R]
.IP
.nf
\f[C]
The local queue pair (QP) to query.
\f[R]
.fi
.TP
.B \f[I]op\f[R]
.IP
.nf
\f[C]
The operation type to query about. Different operation types may write data in a different order.
\f[R]
.fi
.RS
For RDMA read operations: describes ordering of RDMA reads posted on
this local QP.
For RDMA write operations: describes ordering of remote RDMA writes
being done into this local QP.
For RDMA send operations: describes ordering of remote RDMA sends being
done into this local QP.
This function should not be used to determine ordering of other
operation types.
.RE
.TP
.B \f[I]flags\f[R]
Extra field for future input.
For now must be 0.
.SH RETURN VALUE
.PP
\f[B]ibv_query_qp_data_in_order()\f[R] Returns 1 if the data is
guaranteed to be written in\-order, 0 otherwise.
.SH NOTES
.PP
Return value is valid only when the data is read by the CPU and relaxed
ordering MR is not the target of the transfer.
.SH SEE ALSO
.PP
\f[B]ibv_query_qp\f[R](3)
.SH AUTHOR
.PP
Patrisious Haddad <phaddad@nvidia.com>
.PP
Yochai Cohen <yochai@nvidia.com>
