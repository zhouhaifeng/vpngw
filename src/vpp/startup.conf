## Filename:		startup.conf
## Introduction:	VPP start up configure file
## Intro URL: https://my-vpp-docs.readthedocs.io/en/latest/gettingstarted/users/configuring/startup.html#unix
## File History:	
##	2020.09.01	rongtao		Init startup
## 
unix {
  nodaemon
  log /var/log/vpp/vpp.log
  full-coredump
  # cli-listen /run/vpp/cli.sock
  gid vpp
  coredump-size unlimited
  cli-listen localhost:5002
  cli-prompt RToax-VPP#
  cli-history-limit 100
  cli-pager-buffer-limit 5000
  pidfile /run/vpp/vpp.pid
  startup-config /usr/share/vpp/scripts/interface-up.txt
}
 
 
logging {
	## default-log-level emerg|alertcrit|err|warn|notice|info|debug|disabled
	default-log-level warn
 
	## default-syslog-log-level emerg|alertcrit|err|warn|notice|info|debug|disabled
	default-syslog-log-level warn
}
 
api-trace {
## This stanza controls binary API tracing. Unless there is a very strong reason,
## please leave this feature enabled.
  on
## Additional parameters:
##
## To set the number of binary API trace records in the circular buffer, configure nitems
##
## nitems <nnn>
##
## To save the api message table decode tables, configure a filename. Results in /tmp/<filename>
## Very handy for understanding api message changes between versions, identifying missing
## plugins, and so forth.
##
## save-api-table <filename>
}
 
## These values control various aspects of the binary API interface to VPP.
## rtoax 2020年9月1日10:36:51
api-segment {
	## Sets the prefix prepended to the name used for shared memory (SHM) segments. 
	## The default is empty, meaning shared memory segments are created directly in 
	## the SHM directory ‘/dev/shm’. It is worth noting that on many systems ‘/dev/shm’ 
	## is a symbolic link to somewhere else in the file system; Ubuntu links it to ‘/run/shm’.
	# prefix /run/shm
	
	## Sets the user ID or name that should be used to set the ownership of the shared memory 
	## segments. Defaults to the same user that VPP is started with, probably root.
	# uid root
 
	## Sets the group ID or name that should be used to set the ownership of the shared memory 
	## segments. Defaults to the same group that VPP is started with, probably root.
	gid vpp
}
 
socksvr {
  default
}
 
## Config: https://my-vpp-docs.readthedocs.io/en/latest/gettingstarted/users/configuring/startup.html#unix
## rtoax 2020年9月1日
cpu {
	## In the VPP there is one main thread and optionally the user can create worker(s)
	## The main thread and worker thread(s) can be pinned to CPU core(s) manually or automatically
 
	## Manual pinning of thread(s) to CPU core(s)
 
	## Set logical CPU core where main thread runs, if main core is not set
	## VPP will use core 1 if available
	main-core 1
 
	## Place worker threads according to the bitmap hex-mask
	## rtoax 2020年9月1日
	## Error : vpp[35209]: cpu_config: no such thread type 3 'coremask-workers'
	# coremask-workers 0x0030
	
 
	## Set logical CPU core(s) where worker threads are running
	# corelist-workers 2-3,18-19
 
	## Automatic pinning of thread(s) to CPU core(s)
 
	## Sets number of CPU core(s) to be skipped (1 ... N-1)
	## Skipped CPU core(s) are not used for pinning main thread and working thread(s).
	## The main thread is automatically pinned to the first available CPU core and worker(s)
	## are pinned to next free CPU core(s) after core assigned to main thread
	# skip-cores 4
 
	## Specify a number of workers to be created
	## Workers are pinned to N consecutive CPU cores while skipping "skip-cores" CPU core(s)
	## and main thread's CPU core
	workers 2
 
	## Set scheduling policy and priority of main and worker threads
 
	## Scheduling policy options are: other (SCHED_OTHER), batch (SCHED_BATCH)
	## idle (SCHED_IDLE), fifo (SCHED_FIFO), rr (SCHED_RR)
	scheduler-policy fifo
 
	## Scheduling priority is used only for "real-time policies (fifo and rr),
	## and has to be in the range of priorities supported for a particular policy
	scheduler-priority 50
 
	## create <n> i/o threads 
	## rtoax 2020年9月1日09:30:09
	## 报错：vpp[35100]: cpu_config: no such thread type 3 'io'
	# io 2
 
	## Handle i/o devices from thread 0, hand off traffic to worker threads.
	## Requires workers <n>
	## 报错： vpp[35115]: cpu_config: no such thread type 3 'main-thread-io'
	# main-thread-io 2
 
	## 设置线程名称前缀 rtoax
	thread-prefix vpp
}
 
buffers {
	## Increase number of buffers allocated, needed only in scenarios with
	## large number of interfaces and worker threads. Value is per numa node.
	## Default is 16384 (8192 if running unpriviledged)
	buffers-per-numa 128000
 
	## Size of buffer data area
	## Default is 2048
	# default data-size 2048
}
 
dpdk {
	log-level debug
	dev 00:08.0
	no-multi-seg 
	dev default {
		num-rx-queues 2
		num-tx-queues 2
	}
}
# dpdk {
	## Change default settings for all interfaces
	# dev default {
		## Number of receive queues, enables RSS
		## Default is 1
		# num-rx-queues 3
 
		## Number of transmit queues, Default is equal
		## to number of worker threads or 1 if no workers treads
		# num-tx-queues 3
 
		## Number of descriptors in transmit and receive rings
		## increasing or reducing number can impact performance
		## Default is 1024 for both rx and tx
		# num-rx-desc 512
		# num-tx-desc 512
 
		## VLAN strip offload mode for interface
		## Default is off
		# vlan-strip-offload on
 
		## TCP Segment Offload
		## Default is off
		## To enable TSO, 'enable-tcp-udp-checksum' must be set
		# tso on
 
		## Devargs
                ## device specific init args
                ## Default is NULL
		# devargs safe-mode-support=1,pipeline-mode-support=1
	# }
 
	## Whitelist specific interface by specifying PCI address
	# dev 0000:02:00.0
 
	## Blacklist specific device type by specifying PCI vendor:device
        ## Whitelist entries take precedence
	# blacklist 8086:10fb
 
	## Set interface name
	# dev 0000:02:00.1 {
	#	name eth0
	# }
 
	## Whitelist specific interface by specifying PCI address and in
	## addition specify custom parameters for this interface
	# dev 0000:02:00.1 {
	#	num-rx-queues 2
	# }
 
	## Change UIO driver used by VPP, Options are: igb_uio, vfio-pci,
	## uio_pci_generic or auto (default)
	# uio-driver vfio-pci
 
	## Disable multi-segment buffers, improves performance but
	## disables Jumbo MTU support
	# no-multi-seg
 
	## Change hugepages allocation per-socket, needed only if there is need for
	## larger number of mbufs. Default is 256M on each detected CPU socket
	# socket-mem 2048,2048
 
	## Disables UDP / TCP TX checksum offload. Typically needed for use
	## faster vector PMDs (together with no-multi-seg)
	# no-tx-checksum-offload
 
	## Enable UDP / TCP TX checksum offload
	## This is the reversed option of 'no-tx-checksum-offload'
	# enable-tcp-udp-checksum
# }
 
## node variant defaults
#node {
 
## specify the preferred default variant
#	default	{ variant avx512 }
 
## specify the preferred variant, for a given node
#	ip4-rewrite { variant avx2 }
 
#}
 
 
# plugins {
	## Adjusting the plugin path depending on where the VPP plugins are
	#	path /ws/vpp/build-root/install-vpp-native/vpp/lib/vpp_plugins
 
	## Disable all plugins by default and then selectively enable specific plugins
	# plugin default { disable }
	# plugin dpdk_plugin.so { enable }
	# plugin acl_plugin.so { enable }
 
	## Enable all plugins by default and then selectively disable specific plugins
	# plugin dpdk_plugin.so { disable }
	# plugin acl_plugin.so { disable }
# }
 
## The following parameters should only be set by those that are familiar with 
## the interworkings of VPP and the ACL Plugin.
## ACL,访问控制列表(Access Control List，ACL) 是路由器和交换机接口的指令列表，
## 用来控制端口进出的数据包。 rtoax 2020年9月1日10:34:39
#acl-plugin {
	# TODO		
#}
 
## The following parameters should only be set by those that are familiar 
## with the interworkings of VPP.
api-queue {
	## Sets the api queue length. Minimum valid queue length is 1024, 
	## which is also the default.
	length 2048
}
 
## Statistics Segment
# statseg {
    # socket-name <filename>, name of the stats segment socket
    #     defaults to /run/vpp/stats.sock
    # size <nnn>[KMG], size of the stats segment, defaults to 32mb
    # per-node-counters on | off, defaults to none
    # update-interval <f64-seconds>, sets the segment scrape / update interval
# }
 
## 
tls {
	## 
	# se-test-cert-in-ca
 
	## If not set, the default is set to ‘/etc/ssl/certs/ca-certificates.crt’.
	ca-cert-path /etc/ssl/certs/ca-certificates.crt
}
 
## The “tuntap” driver configures a point-to-point interface between the vpp 
# engine and the local Linux kernel stack. 
# This allows e.g. users to ssh to the host | VM | container via vpp “revenue” interfaces. 
# It’s marginally useful, and is currently disabled by default. To [dynamically] create TAP 
# interfaces - the preferred scheme - see the “tap_connect” binary API. The Linux network 
# stack “vnet” interface needs to manually configure, and VLAN and other settings if desired.
#	rtoax 2020年9月1日
#tuntap {
#	enable
#		
#}
 
## Vhost-user configuration parameters control the vhost-user driver.
vhost-user {
	## Subject to deadline-timer expiration - see next item - attempt to transmit at 
	# least <n> packet frames. Default is 32 frames.
	coalesce-frames 64
 
	## Hold packets no longer than (floating-point) seconds before transmitting them. 
	# Default is 0.001 seconds
	coalesce-time 0.002
 
	## vhost-user shared-memory segments can add up to a large amount of memory, so 
	# it’s handy to avoid adding them to corefiles when using a significant number 
	#  of such interfaces.
	dont-dump-memory
}
 
## vlib
# vpp[56687]: vlib_main_configure: parse error `elog-events elog-post-mortem-d...'
#vlib {
#	memory-trace
#	elog-events
#	elog-post-mortem-dump
#}
